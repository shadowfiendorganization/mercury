<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.atlandes.auth.permission">

    <resultMap id="BaseResultMap" type="com.atlandes.auth.po.Permission">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="url" property="url" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, url, name
    </sql>

    <sql id="limit_sql">
        <if test="page_sql != null and page_sql != ''">
            ${page_sql}
        </if>
    </sql>

    <sql id="where_all">
        <where>
            <if test="findContent != null and findContent !='' ">
                and (
                LOWER(name) like CONCAT("%",#{findContent,jdbcType=VARCHAR},"%") or
                LOWER(url) like CONCAT("%",#{findContent,jdbcType=VARCHAR},"%")
                )
            </if>
        </where>
    </sql>

    <select id="findAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from auth_permission
        <include refid="where_all"/>
        <include refid="limit_sql"/>
    </select>

    <select id="findCount" resultMap="BaseResultMap">
        select count(id) from auth_permission
        <include refid="where_all"/>
    </select>

    <select id="selectPermissionById" resultType="perBO">
        select
          p.id,
          r.id as roleId,
          p.name,
          p.url,
          ifnull(uur.uid,0) as marker
        from auth_permission p
        left join auth_re_role_and_permission rp on rp.pid = p.id
        left join (select id from auth_role where id = #{id,jdbcType=BIGINT}) r on r.id = rp.rid
        group by p.id
    </select>

    <select id="findPermissionUrlByUserId" resultType="java.lang.String">
  		select
  		  p.url
        from auth_permission p, auth_re_role_and_permission rp, auth_re_user_and_role ur
		where uid =#{id,jdbcType=BIGINT} and p.id = rp.pid and rp.rid = ur.rid
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from auth_permission
        where id = #{id,jdbcType=BIGINT}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from auth_permission where id = #{id,jdbcType=BIGINT}
    </delete>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.atlandes.auth.po.Permission">
        insert into auth_permission (
          id,
          url,
          name
        )
        values (
          #{id,jdbcType=BIGINT},
          #{url,jdbcType=VARCHAR},
          #{name,jdbcType=VARCHAR}
        )
    </insert>

    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.atlandes.auth.po.Permission">
        insert into auth_permission
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="url != null">
                url,
            </if>
            <if test="name != null">
                name,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="url != null">
                #{url,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.atlandes.auth.po.Permission">
        update auth_permission
        <set>
            <if test="url != null">
                url = #{url,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.atlandes.auth.po.Permission">
        update auth_permission
        set url = #{url,jdbcType=VARCHAR}, name = #{name,jdbcType=VARCHAR}
        where id = #{id,jdbcType=BIGINT}
  </update>

</mapper>